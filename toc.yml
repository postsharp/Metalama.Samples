items:
 - name: Commented examples
   topicUid: samples
   items:
    - name: Logging
      topicUid: sample-log
      items: 
        - name: Step 1. Getting started
          topicUid: sample-log-1
        - name: Step 2. Adding the method name
          topicUid: sample-log-2
        - name: Step 3. Adding parameter values
          topicUid: sample-log-3
        - name: Step 4. Using ILogger
          topicUid: sample-log-4
        - name: Step 5. Using ILogger without DI
          topicUid: sample-log-5
        - name: Step 6. Adding logging to many methods
          topicUid: sample-log-6
        - name: Step 7. Removing sensitive information
          topicUid: sample-log-7
        - name: Step 8. Avoiding infinite recursions
          topicUid: sample-log-8
    - name: Exception Handling
      topicUid: samples-exception-handling
      items:
      - name: Retry
        topicUid: sample-retry
        items:
          - name: Step 1. Getting started
            topicUid: sample-retry-1
          - name: Step 2. Handling async methods
            topicUid: sample-retry-2
          - name: Step 3. Handling cancellation tokens
            topicUid: sample-retry-3          
          - name: Step 4. Adding logging to retry
            topicUid: sample-retry-4
          - name: Step 5. Using Polly
            topicUid: sample-retry-5          
      - name: Enrich with parameter values
        topicUid: sample-enrich-exception
      - name: Report and swallow
        topicUid: sample-report-and-swallow
    - name: Caching
      topicUid: sample-cache
      items:
        - name: Step 1. Getting started
          topicUid: sample-cache-1
        - name: Step 2. Enforcing eligibility
          topicUid: sample-cache-2
        - name: Step 3. Building the cache key
          topicUid: sample-cache-3
        - name: Step 4. Supporting external types
          topicUid: sample-cache-4
    - name: NotifyPropertyChanged
      topicUid: sample-notifypropertychanged
    - name: Change Tracking
      topicUid: sample-dirty
      items:
        - name: Step 1. Getting started
          topicUid: sample-dirty-1
        - name: Step 2. Verifying manual code
          topicUid: sample-dirty-2
        - name: Step 3. Integrating with INotifyPropertyChanged
          topicUid: sample-dirty-3
        - name: Step 4. Reverting changes
          topicUid: sample-dirty-4
        - name: Limitations
          topicUid: sample-dirty-limitations
    - name: Clone
      topicUid: sample-clone
      items:
        - name: Step 1. Getting started
          topicUid: sample-clone-1
        - name: Step 2. Verifying code
          topicUid: sample-clone-2
        - name: Step 3. Allowing handmade customizations
          topicUid: sample-clone-3
        - name: Step 4. Providing coding guidance
          topicUid: sample-clone-4
#    - name: ToString
#      topicUid: sample-tostring
#      items:
#        - name: ToString 101
#          topicUid: sample-tostring-101
#        - name: ToString 102
#          topicUid: sample-tostring-102
#    - name: Enum View-Model
#      topicUid: sample-enum-viewmodel
#    - name: Optional Value Type
#      topicUid: sample-optionalvalue
    - name: Singleton
      topicUid: sample-singleton
      items:
        - name: "Version 1: Classic singleton"
          topicUid: sample-singleton-1
        - name: "Version 2: Modern singleton"
          topicUid: sample-singleton-2
    - name: Memento
      topicUid: sample-memento
      items:
        - name: Step 1. Basic aspect
          topicUid: sample-memento-1
        - name: Step 2. Supporting type inheritance
          topicUid: sample-memento-2
    - name: Shared Fabrics
      topicUid: sample-shared-fabric
    - name: Contributing
      topicUid: samples-contributing
    